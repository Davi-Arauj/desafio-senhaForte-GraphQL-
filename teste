func (r *mutationResolver) UpsertCharacter(ctx context.Context, 
    input model.CharacterInput) (*model.Character, error) {
   id := input.ID
   var character model.Character
   character.Name = input.Name
 
   n := len(r.Resolver.CharacterStore)
   if n == 0 {
       r.Resolver.CharacterStore = make(map[string]model.Character)
   }
 
   if id != nil {
       _, ok := r.Resolver.CharacterStore[*id]
       if !ok {
           return nil, fmt.Errorf("not found")
       }
       r.Resolver.CharacterStore[*id] = character
   } else {
       // generate unique id
       nid := strconv.Itoa(n + 1)
       character.ID = nid
       r.Resolver.CharacterStore[nid] = character
   }
 
   return &character, nil
}



func (r *queryResolver) Character(ctx context.Context, id string) (*model.Character, error) {
    character, ok := r.Resolver.CharacterStore[id]
    if !ok {
        return nil, fmt.Errorf("not found")
    }
    return &character, nil
 }